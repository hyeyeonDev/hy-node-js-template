import { createSocket } from 'dgram';

const port = 5100;
const host = 'localhost' || `52.79.145.67`;

// 9, 10, 11, 12 103737
const data = [
  [
    'ff99003d00a1b2c800000006defb000006deff000000001f12030305f93c13030000ff8903ed0200000000000001905c40ddd600000000000001905c40ddb548eb ',
  ],
  [
    'ff99008d00a1b2c800000006defc000006deff000000001762108f0122020281e58e0124010286e98e01190701850000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001905c40ddd000000000000001905c40ddb68da8 ',
  ],
  [
    'ff99006600a1b2c800000006defd000006deff00000000073b3108147f0000000004100000030000000000000000004b6000000000de0600de0600010064030000e0000000000000000000000000000000000002000001905c40ddc400000000000001905c40ddbabafd ',
  ],
  [
    'ff',
    'aa', // type temp
    '003f00a1b2c800',
    '00019628', // de_number(9, 10, 11, 12)
    '01',
    '000006d4', // gw_id(14, 15, 16, 17)
    '01010000000014012684',
    '37', // battery(28)
    '0002010005',
    '0449ba41', // temp(34, 35, 36, 37)
    '020005',
    '1554f541', // hum(14, 15, 16, 17)
    '000001867cfc824300000000000001867cfc824380bd',
  ],
  [
    'ff',
    '99', // type battery && [10] == 01
    '006600a1b2c800',
    '00019628', // de_number(9, 10, 11, 12)
    'fd',
    '000006d4', // gw_id(14, 15, 16, 17)
    'ff000000003e3bc42002',
    'a0', // battery
    '0000000000',
    'fbb18b00', // temp(34, 35, 36, 37)
    '000000',
    'af0e0000', // hum(14, 15, 16, 17)
    '9611000001000000d40600d4060002ff00000000000000000000000000000000000000000000020000018671a1c437000000000000018671a1c3f690cf',
  ],
  [
    'ff',
    'aa', // type temp
    '003f00a1b2c800',
    '00019221', // de_number(9, 10, 11, 12)
    '01',
    '000006de', // gw_id(14, 15, 16, 17)
    '01010000000f14010e34',
    '01', // battery(28)
    '0002010005',
    '4448b441', // temp(34, 35, 36, 37)
    '020005',
    '8f2f8742', // hum(14, 15, 16, 17)
    '00000188b71073650000000000000188b71073568357',
  ],
  [
    'ff',
    '99', // type temp
    '006600a1b2c800',
    '000006c3', // de_number(9, 10, 11, 12)
    'fd',
    '000006c3', // gw_id(14, 15, 16, 17)
    'ff00000000003b310814',
    '81', // battery(28)
    '0000000073',
    'd0000170', // temp(34, 35, 36, 37)
    '000000',
    '0000c000', // hum(14, 15, 16, 17)
    '000073a00000000c30600c306000100000040bf41000000000000000000000000000000000002000001854c74430d00000000000001854c74430a5d4a',
  ],
  [
    'ff',
    'aa', // type temp
    '003f00a1b2c800',
    '00019628', // de_number(9, 10, 11, 12)
    '01',
    '000006d4', // gw_id(14, 15, 16, 17)
    '0101000000071401aacb',
    '34', // battery(28)
    '0002010005',
    '04f8ba41', // temp(34, 35, 36, 37)
    '020005',
    'fff6de41', // hum(14, 15, 16, 17)
    '00000186725c181e0000000000000186725c1816a5e0',
  ],
  [
    'ffaa003f00a1b2c8000001954601000006dd010100002858140162804b00020100050467b241020005678f564200000192575e8b730000000a00000192575e631b3320',
  ],
];

// 0: 테스트 일반, 1: 테스트 배터리

const msg = Buffer.from(data[8].join(''), 'hex');
console.log(msg.toString('hex'));

const client = createSocket('udp4');
client.send(msg, 0, msg.length, port, host, function (err) {
  if (err) throw err;
  console.log(`[${now()}] UDP Send to ${host}:${port}`);
  client.close();
});

const TIME_ZONE = 3240 * 10000;
const now = () => {
  return new Date(+new Date() + TIME_ZONE).toISOString().replace(/T/gi, ' ').replace(/\..*/, '');
};
